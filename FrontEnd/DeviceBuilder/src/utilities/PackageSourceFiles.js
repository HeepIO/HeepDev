import fileDownload from 'react-file-download'
import JSZip from 'jszip'
import $ from 'jquery'

export const packageSourceFiles = (deviceDetails, controls) => {

  console.log("Controls: ", controls);

  var zip = new JSZip();
  zip.file(deviceDetails.deviceName + ".ino", composeInoFile(deviceDetails, controls));

  var sourceDir = '../../../Firmware/ServerlessFirmware/';

  var fileList = [
    'ActionAndResponseOpCodes.h', 
    'Arduino_EEPROM.h',
    'Arduino_Timer.h',
    'AutoGeneratedInfo.h',
    'CommonDataTypes.h',
    'CreateUniqueID.py',
    'Device.h',
    'DeviceMemory.h',
    'ENC28J60_HeepComms.h',
    'globalDefines.h',
    'Heep_API.h',
    'MemoryUtilities.h',
    'PICW5500_HeepComms.h',
    'PICW5500_NonVolatileMemory.h',
    'PICW5500_Timer.h',
    'Scheduler.h',
    'Simulation_HeepComms.h',
    'Simulation_NonVolatileMemory.h',
    'Simulation_Timer.h',
    'Socket_HeepComms.h'
  ]

  for (var i in fileList) {
    var promise = $.get(sourceDir + fileList[i]);
    zip.file(fileList[i], promise);
  }

  var nameZip = deviceDetails.deviceName + '.zip';

  zip.generateAsync({type:"blob"})
  .then(function(content) {
      fileDownload(content, nameZip);
  });
}

const composeInoFile = (deviceDetails, controls) => {

    var fileContent = `
#define ON_ARDUINO
#include "Heep_API.h"

char deviceName [] = "` + deviceDetails.deviceName + `";\n\n`
+ initializeControls(controls)
+ `void setup()
{

  Serial.begin(115200);\n\n  `
+ setControls(controls)
+ `SetupHeepTasks();
  CreateInterruptServer();
}

void loop()
{
  PerformHeepTasks();
  
}`

  return fileContent
}

const initializeControls = (controls) => {

  var controlDefs = ``;
  for (var i in controls) {
    controlDefs += `char controlName` + i + ` [] = "` + controls[i].controlName + `";\nControl control` + i + `;\n\n`
  }

  return controlDefs

}

const setControls = (controls) => {
  var controlConfigs = ``;
  
  for (var i in controls) {
    controlConfigs += `SetupHeepDevice(deviceName);\n  `;
    controlConfigs += `control` + i + `.controlName = ` + `controlName` + i + `;\n  `;
    controlConfigs += `control` + i + `.controlID = ` + controls[i].controlID + `;\n  `;
    controlConfigs += `control` + i + `.controlDirection = ` + controls[i].controlDirection + `;\n  `;
    controlConfigs += `control` + i + `.controlType = ` + controls[i].controlType + `;\n  `;
    controlConfigs += `control` + i + `.highValue = ` + controls[i].highValue + `;\n  `;
    controlConfigs += `control` + i + `.lowValue = ` + controls[i].lowValue + `;\n  `;
    controlConfigs += `control` + i + `.curValue = ` + controls[i].curValue + `;\n  `;
    controlConfigs += `AddControl(control` + i + `);\n\n  `;
  }

  return controlConfigs
}

